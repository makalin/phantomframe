diff --git a/modules/codec/x264.c b/modules/codec/x264.c
index a1b2c3d..d4e5f6g 100644
--- a/modules/codec/x264.c
+++ b/modules/codec/x264.c
@@ -1,3 +1,4 @@
+/* PhantomFrame Watermark Integration Patch */
 /*
  * x264.c: x264 video encoder
  *
@@ -50,6 +51,7 @@
 #include <vlc_common.h>
 #include <vlc_plugin.h>
 #include <vlc_codec.h>
+#include <vlc_watermark.h>
 
 #include <x264.h>
 
@@ -100,6 +102,12 @@ typedef struct
     int i_keyint_max;
     int i_scenecut;
     int i_bframe;
+    
+    /* PhantomFrame watermark configuration */
+    bool b_watermark_enabled;
+    uint8_t watermark_payload[16];
+    uint32_t watermark_seed;
+    float f_block_density;
 } encoder_sys_t;
 
 static int Open( vlc_object_t * );
@@ -200,6 +208,15 @@ static int Open( vlc_object_t * )
     p_sys->i_keyint_max = var_GetInteger( p_enc, "x264-keyint-max" );
     p_sys->i_scenecut = var_GetInteger( p_enc, "x264-scenecut" );
     p_sys->i_bframe = var_GetInteger( p_enc, "x264-bframe" );
+    
+    /* Initialize watermark configuration */
+    p_sys->b_watermark_enabled = var_GetBool( p_enc, "x264-watermark-enabled" );
+    if( p_sys->b_watermark_enabled )
+    {
+        var_GetAddress( p_enc, "x264-watermark-payload", &p_sys->watermark_payload );
+        p_sys->watermark_seed = var_GetInteger( p_enc, "x264-watermark-seed" );
+        p_sys->f_block_density = var_GetFloat( p_enc, "x264-block-density" );
+    }
 
     /* Create x264 parameter structure */
     x264_param_t param;
@@ -300,6 +317,12 @@ static int Open( vlc_object_t * )
     var_Create( p_enc, "x264-keyint-max", VLC_VAR_INTEGER );
     var_Create( p_enc, "x264-scenecut", VLC_VAR_INTEGER );
     var_Create( p_enc, "x264-bframe", VLC_VAR_INTEGER );
+    
+    /* Create watermark configuration variables */
+    var_Create( p_enc, "x264-watermark-enabled", VLC_VAR_BOOL );
+    var_Create( p_enc, "x264-watermark-payload", VLC_VAR_ADDRESS );
+    var_Create( p_enc, "x264-watermark-seed", VLC_VAR_INTEGER );
+    var_Create( p_enc, "x264-block-density", VLC_VAR_FLOAT );
 
     return VLC_SUCCESS;
 }
@@ -400,6 +423,7 @@ static block_t *Encode( encoder_t *p_enc, picture_t *p_pict )
     x264_picture_t pic_out;
     int i_nal;
     x264_nal_t *p_nal;
+    int i_watermark_result = 0;
 
     if( !p_pict )
         return NULL;
@@ -450,6 +473,15 @@ static block_t *Encode( encoder_t *p_enc, picture_t *p_pict )
         p_sys->i_nal = i_nal;
     }
     
+    /* Apply watermark if enabled */
+    if( p_sys->b_watermark_enabled )
+    {
+        i_watermark_result = phantomframe_apply_watermark(
+            p_sys->p_handle, p_pict, p_sys->watermark_payload,
+            p_sys->watermark_seed, p_sys->f_block_density
+        );
+    }
+    
     /* Create output block */
     block_t *p_block = block_Alloc( p_sys->i_nal * 4 );
     if( !p_block )
@@ -500,6 +532,12 @@ static block_t *Encode( encoder_t *p_enc, picture_t *p_pict )
         p_block->i_buffer += p_nal[i].i_payload;
     }
     
+    /* Log watermark application result */
+    if( p_sys->b_watermark_enabled && i_watermark_result != 0 )
+    {
+        msg_Warn( p_enc, "Watermark application failed: %d", i_watermark_result );
+    }
+    
     return p_block;
 }
 
@@ -600,6 +638,7 @@ static void Close( vlc_object_t * )
     if( p_sys->p_handle )
         x264_encoder_close( p_sys->p_handle );
     
+    /* Clean up watermark resources */
+    if( p_sys->b_watermark_enabled )
+        phantomframe_cleanup();
+    
     free( p_sys );
 }
 
@@ -700,6 +739,7 @@ vlc_module_begin()
     add_integer( "x264-keyint-max", 250, KEYINT_MAX_TEXT, KEYINT_MAX_LONGTEXT, false )
     add_integer( "x264-scenecut", 40, SCENECUT_TEXT, SCENECUT_LONGTEXT, false )
     add_integer( "x264-bframe", 3, BFRAME_TEXT, BFRAME_LONGTEXT, false )
+    add_bool( "x264-watermark-enabled", false, "Enable PhantomFrame watermarking", "Enable/disable watermark embedding", false )
+    add_string( "x264-watermark-payload", "", "Watermark payload (16 bytes)", "16-byte watermark payload in hex format", false )
+    add_integer( "x264-watermark-seed", 0, "Watermark random seed", "Random seed for watermark block selection", false )
+    add_float( "x264-block-density", 0.3, "Watermark block density", "Fraction of blocks to watermark (0.0-1.0)", false )
 vlc_module_end()
